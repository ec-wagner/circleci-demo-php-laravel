# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#

workflows:
    version: 2
    php_mysql_testing:
        jobs:
            - build

version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.2.10-apache-node-browsers
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DATABASE: circle_test
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: ''


      - image: circleci/mysql:5.7
        # command: |
        #     sudo sh -c "echo 'pdo_mysql.default_socket=/var/run/mysqld/mysqld.sock' > /usr/local/etc/php/conf.d/pdo.ini"
        #     sudo service mysql start
        #     sleep 2
        #     ps aux | grep mysql
        #     sudo mysql -u root -e "CREATE user myuser IDENTIFIED BY 'password';"

        # environment:
        #     MYSQL_HOST: 127.0.0.1
        #     MYSQL_DATABASE: circleci
        #     MYSQL_USER: root
        #     MYSQL_ALLOW_EMPTY_PASSWORD: true
        #     MYSQL_ROOT_PASSWORD: ''
        #     MYSQL_PASSWORD: ''

    # working_directory: ~/laravel

    steps:
      - checkout
      - run: sudo apt install -y mysql-client
      # - run: sudo apt install -y libsqlite3-dev zlib1g-dev
      # - run: sudo docker-php-ext-install zip

      # Download and cache dependencies

      # composer cache

      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-

      # - restore_cache:
      #     keys:
      #     # "composer.lock" can be used if it is committed to the repo
      #     - v1-dependencies-{{ checksum "composer.json" }}
      #     # fallback to using the latest cache if no exact match is found
      #     - v1-dependencies-

      - run: composer install -n --prefer-dist
      # - run: composer install --dev --ignore-platform-reqs

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - ~/project

      # node cache

      # - restore_cache:
      #     keys:
      #       - node-v3-{{ checksum "package.json" }}
      #       - node-v3-
      # - run: yarn install
      # - save_cache:
      #     key: node-v3-{{ checksum "package.json" }}
      #     paths:
      #       - ~/project/node_modules
      #       - ~/.yarn
      - run: cp .env.example .env
      # prepare the database
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 60s

      # - run:
      #     name: Create Mysql Database
      #     command: mysql  -h 127.0.0.1 -u root -e "create database circleci2;"


      # - run: php artisan migrate
      # - run: mkdir -p build/logs
      # - run: php vendor/bin/phpunit tests/ --coverage-clover build/logs/clover.xml
      # - run: php vendor/bin/phpcbf --standard=ruleset.xml app/
      # - run: php vendor/bin/phpcs --standard=ruleset.xml app/

      # # run tests with phpunit or codecept
      # #- run: ./vendor/bin/phpunit
      # - run: ./vendor/bin/codecept build
      # - run: ./vendor/bin/codecept run --xml result.xml
      # - store_test_results:
      #     path: tests/_output
      # - store_artifacts:
      #     path: tests/_output
